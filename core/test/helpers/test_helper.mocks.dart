// Mocks generated by Mockito 5.3.0 from annotations
// in core/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:convert' as _i9;
import 'dart:typed_data' as _i10;

import 'package:core/data/datasources/db/database_helper.dart' as _i3;
import 'package:core/utils/network_info.dart' as _i8;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie/data/models/movie_table.dart' as _i6;
import 'package:sqflite/sqflite.dart' as _i5;
import 'package:tvseries/data/models/tvseries_table.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: _i4.Future<_i5.Database?>.value())
          as _i4.Future<_i5.Database?>);
  @override
  _i4.Future<void> insertMovieCacheTransaction(
          List<_i6.MovieTable>? movies, String? category) =>
      (super.noSuchMethod(
          Invocation.method(#insertMovieCacheTransaction, [movies, category]),
          returnValue: _i4.Future<void>.value(),
          returnValueForMissingStub:
              _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> insertTvseriesCacheTransaction(
          List<_i7.TvseriesTable>? tvseries, String? category) =>
      (super.noSuchMethod(
              Invocation.method(
                  #insertTvseriesCacheTransaction, [tvseries, category]),
              returnValue: _i4.Future<void>.value(),
              returnValueForMissingStub: _i4.Future<void>.value())
          as _i4.Future<void>);
  @override
  _i4.Future<List<Map<String, dynamic>>> getCacheMovie(String? category) =>
      (super.noSuchMethod(Invocation.method(#getCacheMovie, [category]),
              returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i4.Future<List<Map<String, dynamic>>>);
  @override
  _i4.Future<List<Map<String, dynamic>>> getCacheTvseries(String? category) =>
      (super.noSuchMethod(Invocation.method(#getCacheTvseries, [category]),
              returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i4.Future<List<Map<String, dynamic>>>);
  @override
  _i4.Future<int> clearCacheMovie(String? category) =>
      (super.noSuchMethod(Invocation.method(#clearCacheMovie, [category]),
          returnValue: _i4.Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<int> clearCacheTvseries(String? category) =>
      (super.noSuchMethod(Invocation.method(#clearCacheTvseries, [category]),
          returnValue: _i4.Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<int> insertMovieWatchlist(_i6.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertMovieWatchlist, [movie]),
          returnValue: _i4.Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<int> removeMovieWatchlist(_i6.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeMovieWatchlist, [movie]),
          returnValue: _i4.Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<int> insertTvseriesWatchlist(_i7.TvseriesTable? tvseries) => (super
      .noSuchMethod(Invocation.method(#insertTvseriesWatchlist, [tvseries]),
          returnValue: _i4.Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<int> removeTvseriesWatchlist(_i7.TvseriesTable? tvseries) => (super
      .noSuchMethod(Invocation.method(#removeTvseriesWatchlist, [tvseries]),
          returnValue: _i4.Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: _i4.Future<Map<String, dynamic>?>.value())
          as _i4.Future<Map<String, dynamic>?>);
  @override
  _i4.Future<List<Map<String, dynamic>>> getWatchlistMovie() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovie, []),
              returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i4.Future<List<Map<String, dynamic>>>);
  @override
  _i4.Future<List<Map<String, dynamic>>> getWatchlistTvseries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvseries, []),
              returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i4.Future<List<Map<String, dynamic>>>);
  @override
  _i4.Future<Map<String, dynamic>?> getTvseriesById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvseriesById, [id]),
              returnValue: _i4.Future<Map<String, dynamic>?>.value())
          as _i4.Future<Map<String, dynamic>?>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: _i4.Future<bool>.value(false)) as _i4.Future<bool>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i2.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
                  this, Invocation.method(#head, [url], {#headers: headers}))))
          as _i4.Future<_i2.Response>);
  @override
  _i4.Future<_i2.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
                  this, Invocation.method(#get, [url], {#headers: headers}))))
          as _i4.Future<_i2.Response>);
  @override
  _i4.Future<_i2.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i9.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#post, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
                  this,
                  Invocation.method(#post, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i4.Future<_i2.Response>);
  @override
  _i4.Future<_i2.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i9.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#put, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
                  this,
                  Invocation.method(#put, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i4.Future<_i2.Response>);
  @override
  _i4.Future<_i2.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i9.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#patch, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
                  this,
                  Invocation.method(#patch, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i4.Future<_i2.Response>);
  @override
  _i4.Future<_i2.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i9.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#delete, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
                  this,
                  Invocation.method(#delete, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i4.Future<_i2.Response>);
  @override
  _i4.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: _i4.Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<_i10.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: _i4.Future<_i10.Uint8List>.value(_i10.Uint8List(0)))
          as _i4.Future<_i10.Uint8List>);
  @override
  _i4.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: _i4.Future<_i2.StreamedResponse>.value(
                  _FakeStreamedResponse_1(
                      this, Invocation.method(#send, [request]))))
          as _i4.Future<_i2.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
